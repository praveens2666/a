sudo apt-get install libomp-dev
sudo install g++ -y

gedit / nano demo.cpp

#include <iostream>
#include <map>
#include <string>
#include <omp.h>
using namespace std;

int main() {
    string str = "hello world";
    map<char, int> freq;

    
    #pragma omp parallel for
    for (int i = 0; i < str.size(); i++) {
        char c = str[i];
        if (c != ' ') {
            #pragma omp critical   
            freq[c]++;             
        }
    }

    cout << "Character frequencies:\n";
    for (auto &p : freq)
        cout << p.first << " -> " << p.second << endl;

    return 0;
}


g++ -fopenmp demo.cpp -o demo.out
./demo.out


fibonacci series

#include <iostream>
#include <vector>
#include <omp.h>
using namespace std;

int main() {
    int n = 10;  
    vector<long long> fib(n);

    fib[0] = 0;
    fib[1] = 1;



    for (int i = 2; i < n; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }

    
    #pragma omp parallel for
    for (int i = 0; i < n; i++) {
        #pragma omp critical
        cout << "Thread " << omp_get_thread_num()
             << " => fib[" << i << "] = " << fib[i] << endl;
    }

    return 0;
}

maximum element in an array

#include <omp.h>
#include <iostream>

using namespace std;

int main(){

    int n;
    cin >> n;

    int arr[n];
    for(int i=0;i<n;i++){
        cin >> arr[i];
    }

    int maxi = -1;

    #pragma omp parallel for
    for(int i=0;i<n;i++){ 
        if(arr[i] > maxi){
            maxi = arr[i];
        }
    }

    cout<<maxi;
}